
Процедура ЗаписатьСообщениеВРегистрPushУведомления(Объект, Дата, Сообщение) Экспорт
	
	Запись = РегистрыСведений.СообщенияPushУведомлений.СоздатьМенеджерЗаписи();

	Запись.ОбъектУведомления = Объект;
	Запись.ДатаОтправки = Дата;
	Запись.Сообщение = Сообщение;

	Запись.Записать(Истина);

КонецПроцедуры

Функция ДанныеАутентификацииДляОтправкиPushУведомления()

	ДанныеАутентификации = Константы.КлючДоступаСервисаPushУведомлений.Получить();
	
	Если Не ЗначениеЗаполнено(ДанныеАутентификации) Тогда
		ДанныеАутентификации = Неопределено;
	КонецЕсли;	
	
	Возврат ДанныеАутентификации;

КонецФункции

Функция ПустаяСтруктураОбъектаУведомления() Экспорт
	
	Возврат Новый Структура("Type, ID, Date");
	
КонецФункции

Функция ТипПоСсылке(Ссылка) Экспорт
	
	ТипXML = XMLТипЗнч(Ссылка);
	
	Если ТипXML = Неопределено Или ТипXML.ИмяТипа = "Null" Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИмяТипа = СтрРазделить(ТипXML.ИмяТипа, ".")[1];
	
	Если ИмяТипа = "УчебныйДень" Тогда
		Тип = ТипУчебныйДень();
	КонецЕсли;

	Возврат Тип;

КонецФункции

Функция ТипУчебныйДень() Экспорт
	
	Возврат "IncomingMail"
	
КонецФункции

Функция ДанныеДляОтправки(ДатаПоследнейОтправки, ТекущаяДата)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаПоследнейОтправки", ДатаПоследнейОтправки);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СообщенияPushУведомлений.ОбъектУведомления,
		|	СообщенияPushУведомлений.ДатаОтправки,
		|	СообщенияPushУведомлений.Сообщение,
		|	СведенияОМобильныхКлиентах.ИдентификаторКлиента,
		|	СведенияОМобильныхКлиентах.ДатаПоследнегоВхода,
		|	СведенияОМобильныхКлиентах.ИдентификаторПодписчикаУведомления
		|ИЗ
		|	РегистрСведений.СообщенияPushУведомлений КАК СообщенияPushУведомлений,
		|	РегистрСведений.СведенияОМобильныхКлиентах КАК СведенияОМобильныхКлиентах";


	Возврат Запрос.Выполнить();

КонецФункции

// Отправляет Push уведомления мобильным устройства
Процедура ВыполнитьОтправкуPushУведомлений() Экспорт

	ИспользоватьPushУведомления = Константы.ИспользоватьPushУведомления.Получить();
	ДатаПоследнейОтправки = Константы.ДатаПоследнейОтправкиPushУведомлений.Получить();
	ТекущаяДата = ТекущаяДатаСеанса();
	
	ДанныеДляОтправки = ДанныеДляОтправки(ДатаПоследнейОтправки, ТекущаяДата);
	ОтправитьСообщенияИспользуяPushУведомления(ДанныеДляОтправки, ИспользоватьPushУведомления);

	Константы.ДатаПоследнейОтправкиPushУведомлений.Установить(ТекущаяДата);

КонецПроцедуры

Процедура ОтправитьСообщенияИспользуяPushУведомления(Сообщения, ИспользоватьPushУведомления)
	
	Заголовок = НСтр("ru = 'Дневник'");
	
	ДанныеАутентификации = Неопределено;
	ДанныеАутентификации = ДанныеАутентификацииДляОтправкиPushУведомления();

	ВыборкаОбъектов = Сообщения.Выбрать();
	
	Пока ВыборкаОбъектов.Следующий() Цикл
		
		ПустаяСтруктураОбъектаУведомления = ПустаяСтруктураОбъектаУведомления();	
		СтруктураОбъектаУведомления = Новый Структура;
		
		Для Каждого КлючИЗначение Из ПустаяСтруктураОбъектаУведомления Цикл
			СтруктураОбъектаУведомления.Вставить(КлючИЗначение.Ключ);
		КонецЦикла;
		
		ОбъектУведомления = ВыборкаОбъектов.ОбъектУведомления;
		Сообщение = ВыборкаОбъектов.Сообщение;
		Идентификатор = ВыборкаОбъектов.ИдентификаторПодписчикаУведомления.Получить();
		
		СвойстваУведомления = Новый Массив;
		СвойстваУведомления.Добавить(ТипПоСсылке(ОбъектУведомления));
		СвойстваУведомления.Добавить(XMLСтрока(ОбъектУведомления));
		СвойстваУведомления.Добавить(XMLСтрока(ТекущаяДатаСеанса()));
			
		ДанныеJS = Новый ЗаписьJSON;
		ДанныеJS.УстановитьСтроку();
		ЗаписатьJSON(ДанныеJS, СвойстваУведомления);
		СериализованныеДанные = ДанныеJS.Закрыть();	
		
		Уведомление = Новый ДоставляемоеУведомление();
		Уведомление.Заголовок = Заголовок;
		Уведомление.Текст = Сообщение;
		Уведомление.Данные = СериализованныеДанные;
		Уведомление.Получатели.Добавить(Идентификатор);
		
		ОтправкаДоставляемыхУведомлений.Отправить(Уведомление, ДанныеАутентификации,, Истина,);
		
	КонецЦикла;

КонецПроцедуры

