
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьПланировщикНаСервере();
	
	// Настроить планировщик.
	Планировщик.ЕдиницаПериодическогоВарианта   = ТипЕдиницыШкалыВремени.Час;
	Планировщик.КратностьПериодическогоВарианта = 24;
	
	Планировщик.ОтступСНачалаПереносаШкалыВремени = 8;
	Планировщик.ОтступСКонцаПереносаШкалыВремени  = 9;
	
	Планировщик.ВыравниватьГраницыЭлементовПоШкалеВремени = Ложь;
	
	Планировщик.ФорматПеренесенныхЗаголовковШкалыВремени = "ДФ='дддд, д ММММ гггг'";
	
	Планировщик.ТекущиеПериодыОтображения.Очистить();
	НачалоПериода = НачалоНедели(ТекущаяДата());
	КонецПериода  = КонецНедели(ТекущаяДата()) - 2 * 24 * 60 * 60;
	Планировщик.ТекущиеПериодыОтображения.Добавить(НачалоПериода, КонецПериода);
	
	Заголовок = "Расписание занятий " + ПредставлениеПериода(НачалоПериода, КонецПериода);

КонецПроцедуры

// Заполняет планировщик данными.
//
&НаСервере
Процедура ЗаполнитьПланировщикНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчебныйДеньУроки.Ссылка.Дата КАК Дата,
		|	УчебныйДеньУроки.НомерСтроки КАК НомерУрока,
		|	УчебныйДеньУроки.Предмет.Представление КАК Предмет,
		|	УчебныйДеньУроки.Ссылка КАК УчебныйДень,
		|	УчебныйДеньУроки.Оценка КАК Оценка,
		|	УчебныйДеньУроки.ДомашнееЗадание КАК ДомашнееЗадание,
		|	УчебныйДеньУроки.Выполнено КАК Выполнено
		|ИЗ
		|	Документ.УчебныйДень.Уроки КАК УчебныйДеньУроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	НомерУрока";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДатаНачала    = НачалоДня(Выборка.Дата) + НачалоУрока(Выборка.НомерУрока);
		ДатаОкончания = НачалоДня(Выборка.Дата) + КонецУрока(Выборка.НомерУрока);
		НовыйЭлемент = Планировщик.Элементы.Добавить(ДатаНачала, ДатаОкончания);
		НовыйЭлемент.Текст    = Выборка.Предмет + Символы.ПС + Выборка.ДомашнееЗадание;
		НовыйЭлемент.Значение = Выборка.УчебныйДень;
		
		Если ДатаНачала >= ТекущаяДата() Тогда   // будушие занятия 
			
			// Белый цвет фона, рамка чёрная.
			ЕстьЗадание = ЗначениеЗаполнено(Выборка.ДомашнееЗадание);
			НовыйЭлемент.ЦветФона  = ЦветДомашнегоЗадания(ЕстьЗадание, Выборка.Выполнено);
			НовыйЭлемент.ЦветРамки = WebЦвета.Черный;

		Иначе   // прошедшие занятия
			
			// Цвет фона по оценке, без рамки.
			НовыйЭлемент.ЦветФона = ЦветОценки(Выборка.Оценка);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция НачалоУрока(НомерУрока)
	
	Если НомерУрока = 1 Тогда 
		Возврат 8 * 60 * 60 + 30 * 60;    // 08:30 
		
	ИначеЕсли НомерУрока = 2 Тогда 
		Возврат 9 * 60 * 60 + 30 * 60;    // 09:30
		
	ИначеЕсли НомерУрока = 3 Тогда 
		Возврат 10 * 60 * 60 + 30 * 60;   // 10:30
		
	ИначеЕсли НомерУрока = 4 Тогда 
		Возврат 11 * 60 * 60 + 30 * 60;   // 11:30
		
	ИначеЕсли НомерУрока = 5 Тогда 
		Возврат 12 * 60 * 60 + 35 * 60;   // 12:35
		
	ИначеЕсли НомерУрока = 6 Тогда 
		Возврат 13 * 60 * 60 + 30 * 60;   // 13:30
		
	ИначеЕсли НомерУрока = 7 Тогда 
		Возврат 14 * 60 * 60 + 25 * 60;   // 14:25
		
	Иначе 
		Возврат 0;
		
	КонецЕсли;	
	
КонецФункции

&НаСервере
Функция КонецУрока(НомерУрока)
	
	Если НомерУрока = 1 Тогда 
		Возврат 9 * 60 * 60 + 15 * 60;    // 09:15 
		
	ИначеЕсли НомерУрока = 2 Тогда 
		Возврат 10 * 60 * 60 + 15 * 60;   // 10:15
		
	ИначеЕсли НомерУрока = 3 Тогда 
		Возврат 11 * 60 * 60 + 15 * 60;   // 11:15
		
	ИначеЕсли НомерУрока = 4 Тогда 
		Возврат 12 * 60 * 60 + 15 * 60;   // 12:15
		
	ИначеЕсли НомерУрока = 5 Тогда 
		Возврат 13 * 60 * 60 + 20 * 60;   // 13:20
		
	ИначеЕсли НомерУрока = 6 Тогда 
		Возврат 14 * 60 * 60 + 15 * 60;   // 14:15
		
	ИначеЕсли НомерУрока = 7 Тогда 
		Возврат 15 * 60 * 60 + 10 * 60;   // 15:10
		
	Иначе 
		Возврат 0;
		
	КонецЕсли;	
	
КонецФункции	

&НаКлиенте
Процедура ПланировщикПередНачаломБыстрогоРедактирования(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикВыбор(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура("Ключ", Элемент.ВыделенныеЭлементы[0].Значение);
	ОткрытьФорму("Документ.УчебныйДень.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПриСменеТекущегоПериодаОтображения(Элемент, ТекущиеПериодыОтображения, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	НовыйПериод = ТекущиеПериодыОтображения[0];
	
	Планировщик.ТекущиеПериодыОтображения.Очистить();
	
	НачалоПериода = НачалоНедели(НовыйПериод.Конец);
	КонецПериода  = КонецНедели(НовыйПериод.Конец) - 2 * 24 * 60 * 60;

	Планировщик.ТекущиеПериодыОтображения.Добавить(НачалоПериода, КонецПериода);
	
	Заголовок = "Расписание занятий " + ПредставлениеПериода(НачалоПериода, КонецПериода);

КонецПроцедуры

&НаСервере
Функция ЦветОценки(Оценка)
	
	Если Оценка = 5 Тогда 
		Возврат WebЦвета.ВесеннеЗеленый;
		
	ИначеЕсли Оценка = 4 Тогда 
		Возврат WebЦвета.Желтый;	
		
	ИначеЕсли Оценка = 3 Тогда 
		Возврат WebЦвета.Красный;	
		
	ИначеЕсли Оценка = 2 Тогда 
		Возврат WebЦвета.Серый;	
		
	ИначеЕсли Оценка = 1 Тогда 
		Возврат WebЦвета.Черный;	
		
	Иначе 
		Возврат Новый Цвет();
		
	КонецЕсли;	
	
КонецФункции

&НаСервере
Функция ЦветДомашнегоЗадания(Есть, Выполнено)
	
	Если Есть Тогда   // есть домашнее задание
		Если Выполнено Тогда 
			Возврат WebЦвета.ВесеннеЗеленый;   // домашнее задание выполнено
			
		Иначе 
			Возврат WebЦвета.Желтый;           // домашнее задание невыполнено
			
		КонецЕсли;
		
	Иначе 
		Возврат WebЦвета.Белый;   // нет домашнего задания
		
	КонецЕсли;
		
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Учебный день записан" Тогда
		Планировщик.Элементы.Очистить();
		ЗаполнитьПланировщикНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры
